<Application x:Class="GUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GUI"
             xmlns:converters="clr-namespace:GUI.Converters"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <converters:RadioBooleanToPuzzleDayConverter x:Key="RadioBooleanToPuzzleDayConverter"/>
        <converters:RadioBooleanToPuzzleYearConverter x:Key="RadioBooleanToPuzzleYearConverter"/>


        <ImageBrush x:Key="Images.Cancel.White" ImageSource="/Assets/Images/backspace.png" Stretch="Uniform"/>
        <ImageBrush x:Key="Images.Cancel.Black" ImageSource="/Assets/Images/backspace-black.png" Stretch="Uniform"/>
        <ImageBrush x:Key="Images.Cancel.Red" ImageSource="/Assets/Images/backspace-redfill.png" Stretch="Uniform"/>
        
        <FontFamily x:Key="CutiveMono">pack://application:,,,/Assets/Fonts/#CutiveMono</FontFamily>
        <FontFamily x:Key="Festive">pack://application:,,,/Assets/Fonts/#Festive</FontFamily>
        <FontFamily x:Key="SyneMono">pack://application:,,,/Assets/Fonts/#SyneMono</FontFamily>
        <FontFamily x:Key="NotoSansMono">pack://application:,,,/Assets/Fonts/#NotoSansMono</FontFamily>

        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>

        <Style x:Key="ToggleButtonOverride" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">

                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="RadioButton.TextOnly" TargetType="RadioButton" BasedOn="{StaticResource ToggleButtonOverride}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="GroupName" Value="DayNumber"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="FontFamily" Value="{StaticResource Festive}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Goldenrod"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderBrush" Value="Goldenrod"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        
        <Style x:Key="TextBox.Output" TargetType="TextBox">
            <Setter Property="Background" Value="DarkGray"/>
            <Setter Property="Foreground" Value="Green"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontFamily" Value="{StaticResource NotoSansMono}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

        

        <Style x:Key="TabItem.Normal" TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="DarkGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Margin="20,0,10,0" Background="Transparent"
                BorderBrush="Transparent" BorderThickness="1,1,1,1" CornerRadius="2">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            ContentSource="Header" Margin="12,2,12,2"
                            RecognizesAccessKey="True">
                                    
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="Goldenrod"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="DarkRed" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                                <Setter Property="Foreground" Value="DarkGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TabControl.Normal" TargetType="TabControl">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style x:Key="Grid.Default" TargetType="Grid">
            <Setter Property="Background" Value="Black"/>
        </Style>
        
        <Style x:Key="TextBlock.Default" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style x:Key="TextBlock.Label" TargetType="TextBlock" BasedOn="{StaticResource TextBlock.Default}">
            <Setter Property="FontFamily" Value="{StaticResource SyneMono}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Regular"/>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        
        <Style x:Key="ButtonOverride" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button.Normal" TargetType="Button" BasedOn="{StaticResource ButtonOverride}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Padding" Value="7,7"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Goldenrod"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Foreground" Value="Goldenrod"/>
                    <Setter Property="BorderBrush" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="TextBlock.Title" TargetType="TextBlock" BasedOn="{StaticResource TextBlock.Default}">
            <Setter Property="FontFamily" Value="{StaticResource Festive}"/>
            <Setter Property="FontSize" Value="70"/>
            <Setter Property="FontWeight" Value="Regular"/>
        </Style>
    </Application.Resources>
</Application>
